/*
 * SearchNavigator.java
 *
 * Created on October 10, 2006, 1:01 PM
 */

package com.runstate.augur.ui.viewer.navigators;

import com.runstate.augur.controller.Controller;
import com.runstate.augur.gallery.Bundle;
import com.runstate.augur.gallery.Msg;
import com.runstate.augur.gallery.models.BundleTreeModel;
import com.runstate.augur.gallery.models.BundleTreeNode;
import com.runstate.augur.ui.trees.PathRenderer;
import com.runstate.augur.ui.viewer.BrowserCommandHandler;
import com.runstate.augur.ui.viewer.views.SearchView;
import java.util.ArrayList;
import javax.swing.plaf.TreeUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.tree.TreePath;

/**
 *
 * @author  dj
 */
public class SearchNavigator extends AbstractNavigator {
    
    /** Creates new form SearchNavigator */
    public SearchNavigator(BrowserCommandHandler vch) {
        super(vch);
        initComponents();
        bundleTree.setModel(new BundleTreeModel(Controller.getGallery().getBundleManager()));
        bundleTree.setCellRenderer(new PathRenderer(false,false));
        TreeUI tui=bundleTree.getUI();
        if(tui instanceof BasicTreeUI) {
            BasicTreeUI ui=(BasicTreeUI)tui;
            ui.setExpandedIcon( null );
            ui.setCollapsedIcon( null );
            ui.setRightChildIndent(4);
            ui.setLeftChildIndent(4);
            putClientProperty("JTree.lineStyle","None");
        } else {
            System.out.println("Unable to assert icon styles on tree");
        }
        bundleTree.setSelectionRow(0);
    }
    
    public String getNavPanelName() { return "Search"; }
    
    public void focusOnMe() {
        requestFocus();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bundleTree = new javax.swing.JTree();

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(bundleTree);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(searchButton))
            .add(searchText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(searchText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 395, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 137, Short.MAX_VALUE)
                .add(searchButton))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        TreePath[] selected=bundleTree.getSelectionPaths();
        if(selected==null) return;
        sv.clearView();
        for(TreePath t:selected) {
            BundleTreeNode btn=(BundleTreeNode)t.getLastPathComponent();
            
            Bundle bundle=btn.getBundle();
            ArrayList<Msg> results=bundle.search(searchText.getText());
            sv.addMsgs(results);
        }
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private SearchView sv;
    
    public void setView(SearchView sv) {
        this.sv=sv;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree bundleTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
    
}
